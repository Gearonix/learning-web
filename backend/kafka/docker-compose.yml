version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    # !
    hostname: zookeeper
    networks:
      - myNetwork
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    networks:
      - myNetwork
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2

  kafka2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29093:29092
    hostname: kafka2
    networks:
      - myNetwork
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092,kafka2:29093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - myNetwork

  topic:
    build:
      context: .
      dockerfile: topic.Dockerfile
    volumes:
      - ./:/app
    depends_on:
      - kafka
      - kafka2
      - kafka-ui
      - zookeeper
    networks:
      - myNetwork

  consumer:
    build:
      context: .
      dockerfile: consumer.Dockerfile
    volumes:
      - ./:/app
    depends_on:
      - kafka
      - kafka2
      - kafka-ui
      - zookeeper
      - producer
      - topic

    networks:
      - myNetwork

  producer:
    build:
      context: .
      dockerfile: producer.Dockerfile
    volumes:
      - ./:/app
    depends_on:
      - kafka
      - kafka2
      - kafka-ui
      - zookeeper
    networks:
      - myNetwork


networks:
  myNetwork:
    driver: bridge